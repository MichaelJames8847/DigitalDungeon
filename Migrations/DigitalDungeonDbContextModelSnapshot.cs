// <auto-generated />
using System;
using DigitalDungeon.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DigitalDungeon.Migrations
{
    [DbContext(typeof(DigitalDungeonDbContext))]
    partial class DigitalDungeonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DigitalDungeon.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Fantasy"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Sci-Fi"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Historical"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Mystery"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Thriller"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "War"
                        },
                        new
                        {
                            Id = 11,
                            CategoryName = "Survival"
                        },
                        new
                        {
                            Id = 12,
                            CategoryName = "Building/Construction"
                        },
                        new
                        {
                            Id = 13,
                            CategoryName = "Art & Creativity"
                        },
                        new
                        {
                            Id = 14,
                            CategoryName = "Technology & Science"
                        },
                        new
                        {
                            Id = 15,
                            CategoryName = "Superhero"
                        },
                        new
                        {
                            Id = 16,
                            CategoryName = "Anime & Manga"
                        },
                        new
                        {
                            Id = 17,
                            CategoryName = "Western"
                        },
                        new
                        {
                            Id = 18,
                            CategoryName = "Cartoon & Animation"
                        },
                        new
                        {
                            Id = 19,
                            CategoryName = "Sports"
                        });
                });

            modelBuilder.Entity("DigitalDungeon.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AdminApproval")
                        .HasColumnType("boolean");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CoverImage")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Developer")
                        .HasColumnType("text");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GenreId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminApproval = true,
                            CategoryId = 1,
                            CoverImage = "https://cdn.akamai.steamstatic.com/steam/apps/292030/header.jpg?t=1693590732",
                            Description = "Embark on a perilous journey as Geralt of Rivia, a monster slayer for hire, in this action RPG set in a dark fantasy world filled with political intrigue and mythical creatures.",
                            Developer = "CD Projekt",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Witcher 3: Wild Hunt"
                        },
                        new
                        {
                            Id = 2,
                            AdminApproval = true,
                            CategoryId = 17,
                            CoverImage = "https://news.xbox.com/en-us/wp-content/uploads/sites/2/2020/04/RDR_XBOX_1920X1080-WIRE.jpg",
                            Description = "Immerse yourself in the Wild West as Arthur Morgan, an outlaw and member of the Van der Linde gang, in this action-adventure game filled with stunning landscapes, intense gunfights, and a gripping narrative.",
                            Developer = "Rockstar Games",
                            GenreId = 19,
                            ReleaseDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Red Dead Redemption 2"
                        },
                        new
                        {
                            Id = 3,
                            AdminApproval = true,
                            CategoryId = 16,
                            CoverImage = "https://i.ebayimg.com/images/g/l0kAAOSwT0NkDkQq/s-l1600.jpg",
                            Description = "Embark on an epic quest as Link to defeat the ancient evil Calamity Ganon and save the kingdom of Hyrule in this action-adventure game with a vast open world, innovative puzzles, and breathtaking visuals.",
                            Developer = "Nintendo",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Legend of Zelda: Breath of the Wild"
                        },
                        new
                        {
                            Id = 4,
                            AdminApproval = true,
                            CategoryId = 14,
                            CoverImage = "https://cdna.artstation.com/p/assets/images/images/033/037/886/4k/artur-tarnowski-malemain.jpg?1608208334",
                            Description = "Navigate the dystopian future of Night City as V, a mercenary seeking immortality, in this open-world action-adventure game with a gripping narrative, cybernetic enhancements, and a vibrant, neon-lit city.",
                            Developer = "CD Projekt",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cyberpunk 2077"
                        },
                        new
                        {
                            Id = 5,
                            AdminApproval = true,
                            CategoryId = 10,
                            CoverImage = "https://mp1st.com/wp-content/uploads/2023/01/ac-valhalla-weekly-free-item.jpg",
                            Description = "Experience the Viking Age as Eivor, a fierce warrior, and lead your clan to glory in this action RPG with a rich historical setting, intense combat, and the exploration of vast landscapes.",
                            Developer = "Ubisoft",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Assassin's Creed Valhalla"
                        },
                        new
                        {
                            Id = 6,
                            AdminApproval = true,
                            CategoryId = 11,
                            CoverImage = "https://www.semperludo.com/wp-content/uploads/2016/01/Cover.jpg",
                            Description = "Survive and thrive in the post-apocalyptic wasteland as the Sole Survivor in this action RPG with a rich narrative, extensive crafting system, and a world filled with mutated creatures and factions.",
                            Developer = "Bethesda Game Studios",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2015, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Fallout 4"
                        },
                        new
                        {
                            Id = 7,
                            AdminApproval = true,
                            CategoryId = 16,
                            CoverImage = "https://www.hdwallpapers.in/thumbs/2022/tracer_hd_overwatch-t2.jpg",
                            Description = "Join the battle as one of the diverse cast of heroes in this team-based multiplayer first-person shooter. Work together with your team to achieve objectives and outsmart the opposing team.",
                            Developer = "Blizzard Entertainment",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2016, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Overwatch"
                        },
                        new
                        {
                            Id = 8,
                            AdminApproval = true,
                            CategoryId = 12,
                            CoverImage = "https://i.stack.imgur.com/dqVlX.png",
                            Description = "Unleash your creativity and build anything you can imagine in this sandbox game. Explore vast landscapes, mine resources, and survive in a world where your only limit is your imagination.",
                            Developer = "Mojang",
                            GenreId = 17,
                            ReleaseDate = new DateTime(2011, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Minecraft"
                        },
                        new
                        {
                            Id = 9,
                            AdminApproval = true,
                            CategoryId = 15,
                            CoverImage = "https://cdn.vox-cdn.com/thumbor/KVk_5mYKZLSdLIqJfyoiDRSqiEs=/0x0:1357x1037/920x613/filters:focal(571x411:787x627):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/59469955/687474703a2f2f692e696d6775722e636f6d2f476c537665734d2e6a7067.0.jpg",
                            Description = "Embark on a journey with Kratos and his son Atreus in this action-adventure game inspired by Norse mythology. Experience intense combat, solve challenging puzzles, and uncover a powerful and emotional narrative.",
                            Developer = "Santa Monica Studio",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2018, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "God of War (2018)"
                        },
                        new
                        {
                            Id = 10,
                            AdminApproval = true,
                            CategoryId = 1,
                            CoverImage = "https://www.relyonhorror.com/wp-content/uploads/2020/07/TLOU2-Cover-art-800.jpg",
                            Description = "Follow Ellie's journey in this emotionally charged action-adventure game set in a post-apocalyptic world. Navigate a world filled with danger, moral choices, and gripping storytelling.",
                            Developer = "Naughty Dog",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2020, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Last of Us Part II"
                        },
                        new
                        {
                            Id = 11,
                            AdminApproval = true,
                            CategoryId = 16,
                            CoverImage = "https://cdn.arstechnica.net/wp-content/uploads/2015/02/lol-640x360.png",
                            Description = "Enter the world of Runeterra and join the battle in this popular multiplayer online battle arena (MOBA) game. Choose from a diverse cast of champions and engage in strategic team-based gameplay.",
                            Developer = "Riot Games",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2009, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "League of Legends"
                        },
                        new
                        {
                            Id = 12,
                            AdminApproval = true,
                            CategoryId = 6,
                            CoverImage = "https://i.imgur.com/fb3gEHr.jpg",
                            Description = "Escape to a deserted island and create your paradise in this charming life simulation game. Customize your island, interact with anthropomorphic animals, and enjoy a relaxing virtual life.",
                            Developer = "Nintendo",
                            GenreId = 13,
                            ReleaseDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Animal Crossing: New Horizons"
                        },
                        new
                        {
                            Id = 13,
                            AdminApproval = true,
                            CategoryId = 18,
                            CoverImage = "https://www.dexerto.com/cdn-cgi/image/width=750,quality=75,format=auto/https://editors.dexerto.com/wp-content/uploads/2022/09/22/Genshin-Impact-voice-actors.jpg",
                            Description = "Embark on a journey across the fantasy world of Teyvat as the Traveler. Discover elemental powers, solve puzzles, and unravel the mysteries of this action role-playing game.",
                            Developer = "miHoYo",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2020, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Genshin Impact"
                        },
                        new
                        {
                            Id = 14,
                            AdminApproval = true,
                            CategoryId = 16,
                            CoverImage = "https://imageio.forbes.com/specials-images/imageserve/6404b3004f6c70fc388619bd/cs/960x0.jpg?format=jpg&width=1440",
                            Description = "Engage in intense multiplayer first-person shooter battles in this classic game. Team up with others or go solo as you compete in various game modes.",
                            Developer = "Valve",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2012, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Counter-Strike: Global Offensive"
                        },
                        new
                        {
                            Id = 15,
                            AdminApproval = true,
                            CategoryId = 1,
                            CoverImage = "https://skyrimromance.com/wp-content/uploads/2014/03/TES_V_Skyrim_Logo.png",
                            Description = "Explore the vast open world of Skyrim, filled with dragons, dungeons, and epic quests. Customize your character, learn powerful shouts, and shape the destiny of Tamriel.",
                            Developer = "Bethesda Game Studios",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2011, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Elder Scrolls V: Skyrim"
                        },
                        new
                        {
                            Id = 16,
                            AdminApproval = true,
                            CategoryId = 19,
                            CoverImage = "https://library.sportingnews.com/styles/crop_style_16_9_mobile_2x/s3/2021-10/ea-fifa-22-cover-kylian-mbappe_1qeaco87s803l13iu0tnr84jhq.jpg?itok=1ZGp2cjd",
                            Description = "Immerse yourself in the world of football with the latest installment of the FIFA series. Experience realistic gameplay, stunning visuals, and compete in various football leagues.",
                            Developer = "EA Vancouver",
                            GenreId = 6,
                            ReleaseDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "FIFA 22"
                        },
                        new
                        {
                            Id = 17,
                            AdminApproval = true,
                            CategoryId = 17,
                            CoverImage = "https://pbs.twimg.com/media/EeSCgeoUwAAoou7?format=jpg&name=large",
                            Description = "Join Master Chief in the next chapter of the Halo series. Experience intense first-person shooter action, explore the mysterious ringworld, and battle against the Banished.",
                            Developer = "343 Industries",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2021, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Halo Infinite"
                        },
                        new
                        {
                            Id = 18,
                            AdminApproval = true,
                            CategoryId = 16,
                            CoverImage = "https://nichegamer.com/wp-content/uploads/2017/10/super-mario-odyssey-10-30-17-1.jpg",
                            Description = "Embark on a globe-trotting adventure with Mario and his new ally Cappy. Explore diverse kingdoms, solve puzzles, and rescue Princess Peach from Bowser's clutches.",
                            Developer = "Nintendo",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2017, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Super Mario Odyssey"
                        },
                        new
                        {
                            Id = 19,
                            AdminApproval = true,
                            CategoryId = 17,
                            CoverImage = "https://www.callofduty.com/content/dam/atvi/callofduty/cod-touchui/blog/hero/mw-wz/WZ-Season-Three-Announce-TOUT.jpg",
                            Description = "Experience the thrill of battle royale warfare in Call of Duty: Warzone. Compete against other players, strategize with your squad, and be the last team standing.",
                            Developer = "Infinity Ward",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Call of Duty: Warzone"
                        },
                        new
                        {
                            Id = 20,
                            AdminApproval = true,
                            CategoryId = 17,
                            CoverImage = "https://505games.com/wp-content/uploads/2021/02/NMS_752x430.jpg",
                            Description = "Embark on a journey of exploration and survival in an infinite procedurally generated universe. Uncover the mysteries of the cosmos, trade with alien species, and chart your own course.",
                            Developer = "Hello Games",
                            GenreId = 4,
                            ReleaseDate = new DateTime(2016, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "No Man's Sky"
                        },
                        new
                        {
                            Id = 21,
                            AdminApproval = true,
                            CategoryId = 16,
                            CoverImage = "https://img.redbull.com/images/w_1200/q_auto,f_auto/redbullcom/2014/10/09/1331683687434_2/dota-2-is-unlike-most-games-of-its-kind",
                            Description = "Engage in intense multiplayer battles in this popular multiplayer online battle arena (MOBA) game. Choose from a vast roster of heroes and compete in strategic team-based gameplay.",
                            Developer = "Valve",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2013, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Dota 2"
                        },
                        new
                        {
                            Id = 22,
                            AdminApproval = true,
                            CategoryId = 17,
                            CoverImage = "https://fanatical.imgix.net/product/original/2db0a1c1-3719-4270-b610-a8a1f6c6efb1.jpeg?auto=compress,format&w=430&fit=crop&h=242",
                            Description = "Join the ranks of elite operators and engage in tactical shooter gameplay. Team up with friends, strategize, and participate in intense close-quarters combat.",
                            Developer = "Ubisoft",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2015, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Tom Clancy's Rainbow Six Siege"
                        },
                        new
                        {
                            Id = 23,
                            AdminApproval = true,
                            CategoryId = 11,
                            CoverImage = "https://news.xbox.com/en-us/wp-content/uploads/sites/2/2021/03/Rust.jpg",
                            Description = "Survive and thrive in a harsh open-world environment in this multiplayer survival game. Form alliances, build bases, and contend with other players in a dynamic and challenging world.",
                            Developer = "Facepunch Studios",
                            GenreId = 17,
                            ReleaseDate = new DateTime(2018, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Rust"
                        },
                        new
                        {
                            Id = 24,
                            AdminApproval = true,
                            CategoryId = 7,
                            CoverImage = "https://www.metacritic.com/a/img/catalog/provider/6/12/6-1-734746-52.jpg",
                            Description = "Experience the life of a high school student and a phantom thief in this Japanese role-playing game. Unravel the mysteries of the Metaverse, forge bonds with friends",
                            Developer = "Atlus",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2016, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Persona 5"
                        },
                        new
                        {
                            Id = 25,
                            AdminApproval = true,
                            CategoryId = 16,
                            CoverImage = "https://i.insider.com/5fe2fb7bedf89200180936d9?width=1000&format=jpeg&auto=webp",
                            Description = "Join your crewmates in this multiplayer party game of teamwork and betrayal. Complete tasks on a spaceship, but beware of the Impostors among you who seek to eliminate the crew.",
                            Developer = "Innersloth",
                            GenreId = 9,
                            ReleaseDate = new DateTime(2018, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Among Us"
                        },
                        new
                        {
                            Id = 26,
                            AdminApproval = true,
                            CategoryId = 17,
                            CoverImage = "https://media.nichegamer.com/wp-content/uploads/2018/01/20150927_SN_LostRiver_Large.jpg",
                            Description = "Dive into an alien underwater world and survive the dangers it holds. Collect resources, build submarines, and unravel the mysteries of the ocean planet.",
                            Developer = "Unknown Worlds Entertainment",
                            GenreId = 4,
                            ReleaseDate = new DateTime(2018, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Subnautica"
                        },
                        new
                        {
                            Id = 27,
                            AdminApproval = true,
                            CategoryId = 12,
                            CoverImage = "https://picfiles.alphacoders.com/228/228393.jpg",
                            Description = "Find tranquility in a beautiful, untouched wilderness. Survive, build your cabin, and explore a vibrant forest filled with wildlife and hidden secrets.",
                            Developer = "FJRD Interactive",
                            GenreId = 4,
                            ReleaseDate = new DateTime(2020, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Among Trees"
                        },
                        new
                        {
                            Id = 28,
                            AdminApproval = true,
                            CategoryId = 16,
                            CoverImage = "https://rhodycigar.com/wp-content/uploads/2023/04/Mortal-Kombat-11.jpg",
                            Description = "Engage in brutal and cinematic combat in the latest installment of the iconic fighting game series. Experience a gripping story and intense multiplayer battles.",
                            Developer = "NetherRealm Studios",
                            GenreId = 11,
                            ReleaseDate = new DateTime(2019, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mortal Kombat 11"
                        },
                        new
                        {
                            Id = 29,
                            AdminApproval = true,
                            CategoryId = 12,
                            CoverImage = "https://static.wikia.nocookie.net/vsbattles/images/c/c4/Terraria.png/revision/latest/scale-to-width-down/1000?cb=20150703181451",
                            Description = "Unleash your creativity in this 2D sandbox adventure. Dig, build, and explore in a procedurally generated world filled with monsters, treasures, and secrets.",
                            Developer = "Re-Logic",
                            GenreId = 17,
                            ReleaseDate = new DateTime(2011, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Terraria"
                        },
                        new
                        {
                            Id = 30,
                            AdminApproval = true,
                            CategoryId = 15,
                            CoverImage = "https://staticg.sportskeeda.com/editor/2022/01/f6d10-16431584756845-1920.jpg",
                            Description = "Embark on a Star Wars story as Cal Kestis, a young Jedi Padawan who narrowly escaped the purge of Order 66. Explore the galaxy, master the lightsaber, and uncover the secrets of the Force.",
                            Developer = "Respawn Entertainment",
                            GenreId = 3,
                            ReleaseDate = new DateTime(2019, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Star Wars Jedi: Fallen Order"
                        });
                });

            modelBuilder.Entity("DigitalDungeon.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreName = "Action"
                        },
                        new
                        {
                            Id = 2,
                            GenreName = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            GenreName = "RPG"
                        },
                        new
                        {
                            Id = 4,
                            GenreName = "Simulation"
                        },
                        new
                        {
                            Id = 5,
                            GenreName = "Strategy"
                        },
                        new
                        {
                            Id = 6,
                            GenreName = "Sports"
                        },
                        new
                        {
                            Id = 7,
                            GenreName = "Puzzle"
                        },
                        new
                        {
                            Id = 8,
                            GenreName = "Horror"
                        },
                        new
                        {
                            Id = 9,
                            GenreName = "Shooter"
                        },
                        new
                        {
                            Id = 10,
                            GenreName = "Music/Rhythm"
                        },
                        new
                        {
                            Id = 11,
                            GenreName = "Fighting"
                        },
                        new
                        {
                            Id = 12,
                            GenreName = "MMO"
                        },
                        new
                        {
                            Id = 13,
                            GenreName = "Educational"
                        },
                        new
                        {
                            Id = 14,
                            GenreName = "Casual"
                        },
                        new
                        {
                            Id = 15,
                            GenreName = "Card & Board Games"
                        },
                        new
                        {
                            Id = 16,
                            GenreName = "Party/Mini-Games"
                        },
                        new
                        {
                            Id = 17,
                            GenreName = "Battle Royale"
                        },
                        new
                        {
                            Id = 18,
                            GenreName = "Sandbox"
                        },
                        new
                        {
                            Id = 19,
                            GenreName = "Open World"
                        },
                        new
                        {
                            Id = 20,
                            GenreName = "Narrative"
                        });
                });

            modelBuilder.Entity("DigitalDungeon.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndYear")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GamesInCatalog")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReleaseYear")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sony's fourth home video game console, offering a diverse library of games and multimedia features.",
                            GamesInCatalog = 22,
                            Image = "https://s.yimg.com/uu/api/res/1.2/6JOzs1MvVruaXkzUevGl1w--~B/Zmk9ZmlsbDtoPTU2Mjt3PTg3NTthcHBpZD15dGFjaHlvbg--/https://o.aolcdn.com/hss/storage/midas/9750d914c6bd7f7c99ca0a962fd0336a/204374529/anniversary-29-ed.jpg.cf.webp",
                            Name = "PlayStation 4",
                            ReleaseYear = new DateTime(2013, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Personal computer platform, providing a wide range of games across genres and capabilities.",
                            GamesInCatalog = 27,
                            Image = "https://thumbor.autonomous.ai/2UM4WvzjJYYsTGIT-WE_pclcnVE=/1600x900/smart/https://cdn.autonomous.ai/static/upload/images/new_post/inspiration-and-tips-for-your-ultimate-desk-gaming-pc-setup-645.jpg",
                            Name = "PC",
                            ReleaseYear = new DateTime(1951, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Hybrid console offering both traditional home console and portable modes, featuring a diverse game library.",
                            GamesInCatalog = 5,
                            Image = "https://www.cnet.com/a/img/resize/11e6be46dff67e0081ea28218bd35c25dfb5664d/hub/2021/10/05/83c35cd5-4664-410d-b15a-5c5d706ba3e7/switch-oled-tabletop.jpg?auto=webp&width=1200",
                            Name = "Nintendo Switch",
                            ReleaseYear = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Microsoft's eighth-generation home video game console, providing a variety of gaming experiences.",
                            GamesInCatalog = 19,
                            Image = "https://cdn.mos.cms.futurecdn.net/9031a5c33a25d2609d046612e4941fb5-970-80.jpg.webp",
                            Name = "Xbox One",
                            ReleaseYear = new DateTime(2013, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Description = "Sony's fifth home video game console, introducing advanced graphics and processing capabilities.",
                            GamesInCatalog = 9,
                            Image = "https://cdn.mos.cms.futurecdn.net/HkdMToxijoHfz4JwUgfh3G-970-80.jpg.webp",
                            Name = "PlayStation 5",
                            ReleaseYear = new DateTime(2020, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Description = "Microsoft's ninth-generation home video game console, featuring high-performance gaming experiences.",
                            GamesInCatalog = 8,
                            Image = "https://cdn.mos.cms.futurecdn.net/uFicTu3Ti56psJpsTGQ64C-970-80.jpg.webp",
                            Name = "Xbox Series X",
                            ReleaseYear = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Description = "Gaming on mobile devices, offering a wide range of genres and casual gaming experiences.",
                            GamesInCatalog = 4,
                            Image = "https://i0.wp.com/www.michigandaily.com/wp-content/uploads/2021/03/mobilegames.jpg?resize=1200%2C800&ssl=1",
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Sony's third home video game console, known for its extensive game library and multimedia capabilities.",
                            EndYear = new DateTime(2017, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GamesInCatalog = 2,
                            Image = "https://www.thefactsite.com/wp-content/uploads/2022/06/sony-playstation-3-facts-740x370.webp",
                            Name = "PlayStation 3",
                            ReleaseYear = new DateTime(2006, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Description = "Microsoft's seventh-generation home video game console, offering a diverse range of games and online services.",
                            EndYear = new DateTime(2016, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GamesInCatalog = 1,
                            Image = "https://guide-images.cdn.ifixit.com/igi/ElNxVpLPiAdTMYYi.standard",
                            Name = "Xbox 360",
                            ReleaseYear = new DateTime(2005, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Description = "Nintendo's eighth-generation home video game console, featuring a touchscreen controller and unique gaming experiences.",
                            EndYear = new DateTime(2017, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GamesInCatalog = 1,
                            Image = "https://i.guim.co.uk/img/media/5fe037fa3a336fbfcb48a7b696df601567c7eac5/338_474_5497_3301/master/5497.jpg?width=620&dpr=1&s=none",
                            Name = "Wii U",
                            ReleaseYear = new DateTime(2012, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Description = "Sony's second home video game console, known for its vast game library and continued support.",
                            EndYear = new DateTime(2013, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GamesInCatalog = 0,
                            Image = "https://www.copetti.org/images/consoles/ps2/international.71e8126f72c944c3b2887685a6583cb0ef47bba48e421618b1e12bdfefff42ae.png",
                            Name = "PlayStation 2",
                            ReleaseYear = new DateTime(2000, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Description = "Microsoft's first home video game console, introducing Xbox Live and diverse gaming experiences.",
                            EndYear = new DateTime(2009, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GamesInCatalog = 0,
                            Image = "https://s.yimg.com/ny/api/res/1.2/8_d4UHnlHtSyRzYZHO0arg--/YXBwaWQ9aGlnaGxhbmRlcjt3PTk2MDtoPTU4MDtjZj13ZWJw/https://s.yimg.com/os/creatr-uploaded-images/2021-11/3426e150-463f-11ec-95d7-52c8a77ed51c",
                            Name = "Xbox",
                            ReleaseYear = new DateTime(2001, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Description = "Nintendo's fifth home video game console, known for popular titles and innovative 3D gaming experiences.",
                            EndYear = new DateTime(2003, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GamesInCatalog = 0,
                            Image = "https://static.wikia.nocookie.net/nintendo/images/0/0c/Nintendo_64_Console_%26_Controller.png/revision/latest/scale-to-width-down/1000?cb=20201214023244&path-prefix=en",
                            Name = "Nintendo 64",
                            ReleaseYear = new DateTime(1996, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Description = "Nintendo's fourth home video game console, featuring iconic titles and 16-bit gaming experiences.",
                            EndYear = new DateTime(2003, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GamesInCatalog = 0,
                            Image = "https://assets.bwbx.io/images/users/iqjWHBFdfxIU/i.7RfU6LoQ5g/v0/-1x-1.jpg",
                            Name = "Super Nintendo Entertainment System (SNES)",
                            ReleaseYear = new DateTime(1990, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Description = "Sega's fourth-generation home video game console, known for popularizing 16-bit gaming.",
                            EndYear = new DateTime(1997, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GamesInCatalog = 0,
                            Image = "https://media.istockphoto.com/id/458121653/photo/sega-genesis-game-console.jpg?s=1024x1024&w=is&k=20&c=JekrS4bxCZbPxbfvZ6rObQ8O9-szLVYKefv2bGiLyCI=",
                            Name = "Sega Genesis",
                            ReleaseYear = new DateTime(1988, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DigitalDungeon.Models.PlatformGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("PlatformGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 2,
                            GameId = 1,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 3,
                            GameId = 1,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 4,
                            GameId = 1,
                            PlatformId = 3
                        },
                        new
                        {
                            Id = 5,
                            GameId = 2,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 6,
                            GameId = 2,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 7,
                            GameId = 2,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 8,
                            GameId = 2,
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 9,
                            GameId = 2,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 10,
                            GameId = 3,
                            PlatformId = 3
                        },
                        new
                        {
                            Id = 11,
                            GameId = 3,
                            PlatformId = 10
                        },
                        new
                        {
                            Id = 12,
                            GameId = 4,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 13,
                            GameId = 4,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 14,
                            GameId = 4,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 15,
                            GameId = 5,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 16,
                            GameId = 5,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 17,
                            GameId = 5,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 18,
                            GameId = 5,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 19,
                            GameId = 5,
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 20,
                            GameId = 6,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 21,
                            GameId = 6,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 22,
                            GameId = 6,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 23,
                            GameId = 7,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 24,
                            GameId = 7,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 25,
                            GameId = 7,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 26,
                            GameId = 7,
                            PlatformId = 3
                        },
                        new
                        {
                            Id = 27,
                            GameId = 8,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 28,
                            GameId = 8,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 29,
                            GameId = 8,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 30,
                            GameId = 8,
                            PlatformId = 3
                        },
                        new
                        {
                            Id = 31,
                            GameId = 8,
                            PlatformId = 7
                        },
                        new
                        {
                            Id = 32,
                            GameId = 9,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 33,
                            GameId = 9,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 34,
                            GameId = 9,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 35,
                            GameId = 10,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 36,
                            GameId = 10,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 37,
                            GameId = 10,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 38,
                            GameId = 11,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 39,
                            GameId = 12,
                            PlatformId = 3
                        },
                        new
                        {
                            Id = 40,
                            GameId = 13,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 41,
                            GameId = 13,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 42,
                            GameId = 13,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 43,
                            GameId = 13,
                            PlatformId = 7
                        },
                        new
                        {
                            Id = 44,
                            GameId = 14,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 45,
                            GameId = 14,
                            PlatformId = 7
                        },
                        new
                        {
                            Id = 46,
                            GameId = 15,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 47,
                            GameId = 15,
                            PlatformId = 8
                        },
                        new
                        {
                            Id = 48,
                            GameId = 15,
                            PlatformId = 9
                        },
                        new
                        {
                            Id = 49,
                            GameId = 15,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 50,
                            GameId = 15,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 51,
                            GameId = 15,
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 52,
                            GameId = 16,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 53,
                            GameId = 16,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 54,
                            GameId = 16,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 55,
                            GameId = 16,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 56,
                            GameId = 16,
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 57,
                            GameId = 17,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 58,
                            GameId = 17,
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 59,
                            GameId = 18,
                            PlatformId = 3
                        },
                        new
                        {
                            Id = 60,
                            GameId = 19,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 61,
                            GameId = 19,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 62,
                            GameId = 19,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 63,
                            GameId = 19,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 64,
                            GameId = 19,
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 65,
                            GameId = 20,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 66,
                            GameId = 20,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 67,
                            GameId = 20,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 68,
                            GameId = 21,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 69,
                            GameId = 22,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 70,
                            GameId = 22,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 71,
                            GameId = 22,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 72,
                            GameId = 22,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 73,
                            GameId = 22,
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 74,
                            GameId = 23,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 75,
                            GameId = 23,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 76,
                            GameId = 23,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 77,
                            GameId = 24,
                            PlatformId = 8
                        },
                        new
                        {
                            Id = 78,
                            GameId = 24,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 79,
                            GameId = 25,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 80,
                            GameId = 25,
                            PlatformId = 7
                        },
                        new
                        {
                            Id = 81,
                            GameId = 26,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 82,
                            GameId = 26,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 83,
                            GameId = 26,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 84,
                            GameId = 27,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 85,
                            GameId = 28,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 86,
                            GameId = 28,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 87,
                            GameId = 28,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 88,
                            GameId = 28,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 89,
                            GameId = 28,
                            PlatformId = 6
                        },
                        new
                        {
                            Id = 90,
                            GameId = 29,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 91,
                            GameId = 29,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 92,
                            GameId = 29,
                            PlatformId = 4
                        },
                        new
                        {
                            Id = 93,
                            GameId = 29,
                            PlatformId = 7
                        },
                        new
                        {
                            Id = 94,
                            GameId = 30,
                            PlatformId = 2
                        },
                        new
                        {
                            Id = 95,
                            GameId = 30,
                            PlatformId = 1
                        },
                        new
                        {
                            Id = 96,
                            GameId = 30,
                            PlatformId = 5
                        },
                        new
                        {
                            Id = 97,
                            GameId = 30,
                            PlatformId = 3
                        },
                        new
                        {
                            Id = 98,
                            GameId = 30,
                            PlatformId = 6
                        });
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 9,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 17,
                            UserProfileId = 1
                        });
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserFavoriteGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("integer");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlatformId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserFavoriteGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 2,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 2,
                            GameId = 9,
                            UserProfileId = 1
                        });
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GenreId")
                        .HasColumnType("integer");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreId = 3,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 2,
                            GenreId = 16,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 3,
                            GenreId = 19,
                            UserProfileId = 1
                        });
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int?>("GameId")
                        .HasColumnType("integer");

                    b.Property<int?>("GenreId")
                        .HasColumnType("integer");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("GenreId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "101 Main Street",
                            FirstName = "Admina",
                            IdentityUserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            LastName = "Strator"
                        });
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("integer");

                    b.Property<int>("PlatformsId")
                        .HasColumnType("integer");

                    b.HasKey("GamesId", "PlatformsId");

                    b.HasIndex("PlatformsId");

                    b.ToTable("GamePlatform");
                });

            modelBuilder.Entity("GameUserCategory", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("integer");

                    b.Property<int>("UserCategoriesId")
                        .HasColumnType("integer");

                    b.HasKey("GamesId", "UserCategoriesId");

                    b.HasIndex("UserCategoriesId");

                    b.ToTable("GameUserCategory");
                });

            modelBuilder.Entity("GameUserGenre", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("integer");

                    b.Property<int>("UserGenresId")
                        .HasColumnType("integer");

                    b.HasKey("GamesId", "UserGenresId");

                    b.HasIndex("UserGenresId");

                    b.ToTable("GameUserGenre");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35",
                            ConcurrencyStamp = "7a6e837e-6a61-4cfb-88ef-55cbd55c3333",
                            Name = "Admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cfbfbbae-b4f9-4dc2-8565-898b639e8dd6",
                            Email = "admina@strator.comx",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEJ/3Y21kwT6tsldfsY+o5khgPYDlXVjcSELwYWhksdF7bEHGVVTE8UQrgDJb94S16g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "17fdcf77-d7d7-4c22-9a8e-d3490b6e2454",
                            TwoFactorEnabled = false,
                            UserName = "Administrator"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            RoleId = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DigitalDungeon.Models.Game", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Category", "Category")
                        .WithMany("Games")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDungeon.Models.Genre", "Genre")
                        .WithMany("Games")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("DigitalDungeon.Models.PlatformGame", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Game", "Game")
                        .WithMany("PlatformGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDungeon.Models.Platform", "Platform")
                        .WithMany("PlatformGames")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserCategory", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Category", "Category")
                        .WithMany("UserCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDungeon.Models.UserProfile", "UserProfile")
                        .WithMany("UserCategories")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserFavoriteGame", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Game", "Game")
                        .WithMany("UserFavoriteGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDungeon.Models.Platform", null)
                        .WithMany("UserFavoriteGames")
                        .HasForeignKey("PlatformId");

                    b.HasOne("DigitalDungeon.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserGenre", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Genre", "Genre")
                        .WithMany("UserGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDungeon.Models.UserProfile", "UserProfile")
                        .WithMany("UserGenres")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserProfile", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Game", null)
                        .WithMany("UserProfiles")
                        .HasForeignKey("GameId");

                    b.HasOne("DigitalDungeon.Models.Genre", null)
                        .WithMany("UserProfiles")
                        .HasForeignKey("GenreId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDungeon.Models.Platform", null)
                        .WithMany()
                        .HasForeignKey("PlatformsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameUserCategory", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDungeon.Models.UserCategory", null)
                        .WithMany()
                        .HasForeignKey("UserCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameUserGenre", b =>
                {
                    b.HasOne("DigitalDungeon.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalDungeon.Models.UserGenre", null)
                        .WithMany()
                        .HasForeignKey("UserGenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalDungeon.Models.Category", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("UserCategories");
                });

            modelBuilder.Entity("DigitalDungeon.Models.Game", b =>
                {
                    b.Navigation("PlatformGames");

                    b.Navigation("UserFavoriteGames");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("DigitalDungeon.Models.Genre", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("UserGenres");

                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("DigitalDungeon.Models.Platform", b =>
                {
                    b.Navigation("PlatformGames");

                    b.Navigation("UserFavoriteGames");
                });

            modelBuilder.Entity("DigitalDungeon.Models.UserProfile", b =>
                {
                    b.Navigation("UserCategories");

                    b.Navigation("UserGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
